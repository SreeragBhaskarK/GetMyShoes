<main class="content">
	<div class="container-fluid p-0">

		<div class="row mb-2 mb-xl-3">
			<div class="col-auto d-none d-sm-block">
				<h3>Dashboard</h3>
			</div>

		</div>
		<div class="row">
			<div class="col-sm-6 col-xl-3">
				<div class="card">
					<div class="card-body">
						<div class="row">
							<div class="col mt-0">
								<h5 class="card-title">Income</h5>
							</div>

							<div class="col-auto">
								<div class="stat text-primary">
									<i class="align-middle" data-feather="dollar-sign"></i>
								</div>
							</div>
						</div>
						<h1 class="mt-1 mb-3">₹ <%=locals.incomeWeek %>
						</h1>
						<div class="mb-0">
							<% if (locals.incomepercentage==Infinity || locals.incomepercentage===0 ||
								locals.incomepercentage=='NaN' ) { %>
								<span class="badge badge-warning-light"> <i class="mdi mdi-arrow-bottom-right"></i>0%
									<% }else{ %>
										<% if (locals.incomepercentage>0) { %>
											<span class="badge badge-success-light"> <i
													class="mdi mdi-arrow-bottom-right"></i>
												<%=locals.incomepercentage %>%
													<% }else{ %>
														<span class="badge badge-danger-light"> <i
																class="mdi mdi-arrow-bottom-right"></i>
															<%=locals.incomepercentage %>%
																<% } %>
																	<% } %>

														</span>
														<span class="text-muted">Since last week</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-6 col-xl-3">
				<div class="card">
					<div class="card-body">
						<div class="row">
							<div class="col mt-0">
								<h5 class="card-title">Orders</h5>
							</div>

							<div class="col-auto">
								<div class="stat text-primary">
									<i class="align-middle" data-feather="shopping-bag"></i>
								</div>
							</div>
						</div>
						<h1 class="mt-1 mb-3">
							<%=locals.orderCount %>
						</h1>
						<div class="mb-0">

							<% if (locals.percentageChange===Infinity || locals.percentageChange===0 ||
							locals.percentageChange ==='NaN') { %>
								<span class="badge badge-warning-light"> <i class="mdi mdi-arrow-bottom-right"></i>0%
									<% }else{ %>
										<% if (locals.percentageChange>0) { %>
											<span class="badge badge-success-light"> <i
													class="mdi mdi-arrow-bottom-right"></i>
												<%=locals.percentageChange %>%
													<% }else{ %>
														<span class="badge badge-danger-light"> <i
																class="mdi mdi-arrow-bottom-right"></i>
															<%=locals.percentageChange %>%
																<% } %>
																	<% } %>
														</span>
														<span class="text-muted">Since last week</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-6 col-xl-3">
				<div class="card">
					<div class="card-body">
						<div class="row">
							<div class="col mt-0">
								<h5 class="card-title">Users</h5>
							</div>

							<div class="col-auto">
								<div class="stat text-primary">
									<i class="align-middle" data-feather="user"></i>
								</div>
							</div>
						</div>
						<h1 class="mt-1 mb-3"><%= locals.totalUsersByWeek.weekUsersCount %></h1>
						<div class="mb-0">
							<% if (locals.totalUsersByWeek.usersChangeFormatted===Infinity || locals.totalUsersByWeek.usersChangeFormatted===0 ||
							locals.totalUsersByWeek.usersChangeFormatted =='NaN') { %>
								<span class="badge badge-warning-light"> <i class="mdi mdi-arrow-bottom-right"></i>0%
									<% }else{ %>
										<% if (locals.totalUsersByWeek.usersChangeFormatted>0) { %>
											<span class="badge badge-success-light"> <i
													class="mdi mdi-arrow-bottom-right"></i>
												<%=locals.totalUsersByWeek.usersChangeFormatted %>%
													<% }else{ %>
														<span class="badge badge-danger-light"> <i
																class="mdi mdi-arrow-bottom-right"></i>
															<%=locals.totalUsersByWeek.usersChangeFormatted %>%
																<% } %>
																	<% } %>
							</span>
							<span class="text-muted">Since last week</span>
						</div>
					</div>
				</div>
			</div>
			<div class="col-sm-6 col-xl-3">
				<div class="card">
					<div class="card-body">
						<div class="row">
							<div class="col mt-0">
								<h5 class="card-title">Revenue</h5>
							</div>

							<div class="col-auto">
								<div class="stat text-primary">
									<i class="align-middle" data-feather="shopping-cart"></i>
								</div>
							</div>
						</div>
						<h1 class="mt-1 mb-3">₹ <%=locals.revenueWeek%>
						</h1>
						<div class="mb-0">
							<% if (locals.revenuepercentage==Infinity || locals.revenuepercentage===0 || locals.revenuepercentage=== 'NaN'  ) { %>
								<span class="badge badge-warning-light"> <i class="mdi mdi-arrow-bottom-right"></i>0%
									<% }else{ %>
										<% if (locals.revenuepercentage>0) { %>
											<span class="badge badge-success-light"> <i
													class="mdi mdi-arrow-bottom-right"></i>
												<%=locals.revenuepercentage %>%
													<% }else{ %>
														<span class="badge badge-danger-light"> <i
																class="mdi mdi-arrow-bottom-right"></i>
															<%=locals.revenuepercentage %>%
																<% } %>
																	<% } %>
																		
														</span>
														<span class="text-muted">Since last week</span>
						</div>
					</div>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-12 col-lg-8 d-flex">
				<div class="card flex-fill w-100">
					<div class="card-header">
						<div class="float-end">
							<form class="row g-2" id="totalRevenueFilter">
								<div class="col-auto">
									<select class="form-select form-select-sm bg-light  border-0" name="totalFilter">
										<option value="month">month</option>
										<option value="year">year</option>
										<option value="week">week</option>
									</select>
								</div>
								<!-- <div class="col-auto">
									<input type="text" class="form-control form-control-sm bg-light rounded-2 border-0"
										style="width: 100px;" placeholder="Search..">
								</div> -->
							</form>
						</div>
						<h5 class="card-title mb-0">Total Revenue</h5>
					</div>
					<div class="card-body pt-2 pb-3">
						<div id="graphAppend" class="chart chart-md">
							<canvas id="chartjs-dashboard-line"></canvas>
						</div>
					</div>
				</div>
			</div>
			<div class="col-12 col-lg-4 d-flex ">
				<div class="card flex-fill w-100">
					<div class="card-header">
						<div class="float-end">
							<form class="row g-2" id="month-form">
								<div class="col-auto">
									<select name="month" class="form-select form-select-sm bg-light border-0">
										<option value="0" {{currentMonth==0 ? 'selected' : '' }}>Jan</option>
										<option value="1" {{currentMonth==1 ? 'selected' : '' }}>Feb</option>
										<option value="2" {{currentMonth==2 ? 'selected' : '' }}>Mar</option>
										<option value="3" {{currentMonth==3 ? 'selected' : '' }}>Apr</option>
										<option value="4" {{currentMonth==4 ? 'selected' : '' }}>May</option>
										<option value="5" {{currentMonth==5 ? 'selected' : '' }}>Jun</option>
										<option value="6" {{currentMonth==6 ? 'selected' : '' }}>Jul</option>
										<option value="7" {{currentMonth==7 ? 'selected' : '' }}>Aug</option>
										<option value="8" {{currentMonth==8 ? 'selected' : '' }}>Sep</option>
										<option value="9" {{currentMonth==9 ? 'selected' : '' }}>Oct</option>
										<option value="10" {{currentMonth==10 ? 'selected' : '' }}>Nov</option>
										<option value="11" {{currentMonth==11 ? 'selected' : '' }}>Dec</option>
									</select>
								</div>
								<!-- <div class="col-auto">
									<input type="text" class="form-control form-control-sm bg-light rounded-2 border-0"
										style="width: 100px;" placeholder="Search..">
								</div> -->
							</form>
						</div>
						<h5 class="card-title mb-0">Orders by State</h5>
					</div>
					<div class="card-body px-4">
						<div id="ind_map" style="height:294px;"></div>
					</div>
				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-12 col-lg-4 d-flex">
				<div class="card flex-fill w-100">
					<div class="card-header">
						
						<h5 class="card-title mb-0">Total order</h5>
					</div>
					<div class="card-body d-flex w-100">
						<div class="align-self-center chart chart-lg">
							<canvas id="chartjs-dashboard-bar"></canvas>
						</div>
					</div>
				</div>
			</div>
			<div class="col-12 col-lg-8 d-flex">
				<div class="card flex-fill w-100">
					<div class="card-header">
						<div class="float-end">
							<!-- <form class="row g-2">
								<div class="col-auto">
									<select class="form-select form-select-sm bg-light border-0">
										<option value="0">Jan</option>
										<option value="1">Feb</option>
										<option value="2">Mar</option>
										<option value="3">Apr</option>
										<option value="4">May</option>
										<option value="5">Jun</option>
										<option value="6">Jul</option>
										<option value="7">Aug</option>
										<option value="8">Sep</option>
										<option value="9">Oct</option>
										<option value="10">Nov</option>
										<option value="11">Dec</option>
									</select>
								</div>
								<div class="col-auto">
									<input type="text" class="form-control form-control-sm bg-light rounded-2 border-0"
										style="width: 100px;" placeholder="Search..">
								</div>
							</form> -->
						</div>
						<h5 class="card-title mb-0">Total Income</h5>
					</div>
					<div class="card-body  pb-3">
						<div  class="chart chart-md">
							<canvas style="height: 350px;" id="chartjs-dashboard-line-income"></canvas>
						</div>
					</div>
				</div>
			</div>

			
		
			
		</div>

	</div>
</main>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
	$(document).ready(function () {
		var currentMonth = new Date().getMonth(); // 0-indexed, i.e. Jan = 0, Dec = 11
		$('#month-form select[name="month"]').val(currentMonth);
	});
</script>

<script>

	$(document).ready(function () {

		$('#categorySalesFilter select[name="categorySales"]').change(function () {
			$.ajax({
				type: 'POST',
				url: '/admin/totalcategorysales',
				data: $('#categorySales').serialize(),
				success: function (response) {
				
					/* totalRevenue(response) */
				},
				error: function (xhr, status, error) {
					// Handle error
				}
			});
		});
	});


</script>

<script>


	$(document).ready(function () {

		$('#totalRevenueFilter select[name="totalFilter"]').change(function () {
			$.ajax({
				type: 'POST',
				url: '/admin/totalrevenue',
				data: $('#totalRevenueFilter').serialize(),
				success: function (response) {
			
					$('#chartjs-dashboard-line').remove()
					let appendGraph = `<canvas id="chartjs-dashboard-line"></canvas>`
					$('#graphAppend').append(appendGraph)
					totalRevenue(response)
				},
				error: function (xhr, status, error) {
					// Handle error
				}
			});
		});
	});


	function totalRevenue(revenue) {
		let totalrevenue = revenue.totalRevenue[0]

		var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
		var gradientLight = ctx.createLinearGradient(0, 0, 0, 225);
		gradientLight.addColorStop(0, "rgba(215, 227, 244, 1)");
		gradientLight.addColorStop(1, "rgba(215, 227, 244, 0)");
		var gradientDark = ctx.createLinearGradient(0, 0, 0, 225);
		gradientDark.addColorStop(0, "rgba(51, 66, 84, 1)");
		gradientDark.addColorStop(1, "rgba(51, 66, 84, 0)");




		// Line chart
		if (revenue.name == 'month') {
	
			new Chart(document.getElementById("chartjs-dashboard-line"), {
				type: "line",
				data: {
					labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
					datasets: [{
						label: "Sales (₹)",
						fill: true,
						backgroundColor: window.theme.id === "light" ? gradientLight : gradientDark,
						borderColor: window.theme.primary,
						data: [totalrevenue?.jan??0, totalrevenue?.feb??0, totalrevenue?.mar??0, totalrevenue?.apr??0, totalrevenue?.may??0, totalrevenue?.jun??0, totalrevenue?.jul??0, totalrevenue?.aug??0, totalrevenue?.sep??0, totalrevenue?.oct??0, totalrevenue?.nov??0, totalrevenue?.dec??0]
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 1000
							},
							display: true,
							borderDash: [3, 3],
							gridLines: {
								color: "rgba(0,0,0,0.0)",
								fontColor: "#fff"
							}
						}]
					}
				}

			});
		} else if (revenue.name == 'year') {

			new Chart(document.getElementById("chartjs-dashboard-line"), {
				type: "line",
				data: {
					labels: ["2021", "2022", "2023", "2024", "2025"],
					datasets: [{
						label: "Sales (₹)",
						fill: true,
						backgroundColor: window.theme.id === "light" ? gradientLight : gradientDark,
						borderColor: window.theme.primary,
						data: [totalrevenue['2021'], totalrevenue['2022'], totalrevenue['2023'], totalrevenue['2024'], totalrevenue['2025']],
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 1000
							},
							display: true,
							borderDash: [3, 3],
							gridLines: {
								color: "rgba(0,0,0,0.0)",
								fontColor: "#fff"
							}
						}]
					}
				}
			});
		} else if (revenue.name == 'week') {
	
			new Chart(document.getElementById("chartjs-dashboard-line"), {
				type: "line",
				data: {
					labels: ["mon", "tue", "wed", "thu", "fri", "sat", "sun"],
					datasets: [{
						label: "Sales (₹)",
						fill: true,
						backgroundColor: window.theme.id === "light" ? gradientLight : gradientDark,
						borderColor: window.theme.primary,
						data: [totalrevenue?.mon??0, totalrevenue?.tue??0, totalrevenue?.wed??0, totalrevenue?.thu??0, totalrevenue?.fri??0, totalrevenue?.sat??0, totalrevenue?.sun??0],
					}]
				},
				options: {
					maintainAspectRatio: false,
					legend: {
						display: false
					},
					tooltips: {
						intersect: false
					},
					hover: {
						intersect: true
					},
					plugins: {
						filler: {
							propagate: false
						}
					},
					scales: {
						xAxes: [{
							reverse: true,
							gridLines: {
								color: "rgba(0,0,0,0.0)"
							}
						}],
						yAxes: [{
							ticks: {
								stepSize: 1000
							},
							display: true,
							borderDash: [3, 3],
							gridLines: {
								color: "rgba(0,0,0,0.0)",
								fontColor: "#fff"
							}
						}]
					}
				}
			});
		}

	}





</script>
<script>
	$(document).ready(function () {

		$('#month-form select[name="month"]').change(function () {
			$.ajax({
				type: 'POST',
				url: '/admin/salesbystate',
				data: $('#month-form').serialize(),
				success: function (response) {
		

					stateSaleinMonth(response)
				},
				error: function (xhr, status, error) {
					// Handle error
				}
			});
		});
	});


	async function stateSaleinMonth(states) {


		var markers = states.map(i => ({
			coords: i.coords,
			name: i.state + ": " + i.order
		}));

		var mapContainer = $('#ind_map');
		var mapInstance = mapContainer.empty()
		/* mapContainer.append() */

		var map = new jsVectorMap({
			map: "in_mill_en",
			selector: "#ind_map",
			zoomButtons: true,
			markers: markers,
			markerStyle: {
				initial: {
					r: 9,
					stroke: window.theme.white,
					strokeWidth: 7,
					stokeOpacity: .4,
					fill: window.theme.primary
				},
				hover: {
					fill: window.theme.primary,
					stroke: window.theme.primary
				}
			},
			regionStyle: {
				initial: {
					fill: window.theme["gray-200"]
				}
			},
			zoomOnScroll: false
		});
		window.addEventListener("resize", () => {
			map.updateSize();
		});
		setTimeout(function () {
			map.updateSize();
		}, 250);

	}


</script>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		// output: "Hello, world!"
		const data = `<%- JSON.stringify(States) %>`;
		const parsedData = JSON.parse(data);
	
		var markers = parsedData.map(i => ({

			coords: i.coords,
			name: i.state + ": " + i.order
		}));

	

		var map = new jsVectorMap({
			map: "in_mill_en",
			selector: "#ind_map",
			zoomButtons: true,
			markers: markers,
			markerStyle: {
				initial: {
					r: 9,
					stroke: window.theme.white,
					strokeWidth: 7,
					stokeOpacity: .4,
					fill: window.theme.primary
				},
				hover: {
					fill: window.theme.primary,
					stroke: window.theme.primary
				}
			},
			regionStyle: {
				initial: {
					fill: window.theme["gray-200"]
				}
			},
			zoomOnScroll: false
		});
		window.addEventListener("resize", () => {
			map.updateSize();
		});
		setTimeout(function () {
			map.updateSize();
		}, 250);
	});
</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		// Bar chart

		const data = `<%- JSON.stringify(totalMonthOrder) %>`;
		const parsedData = JSON.parse(data);
		new Chart(document.getElementById("chartjs-dashboard-bar"), {
			type: "bar",
			data: {
				labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				datasets: [{
					label: "This order",
					backgroundColor: window.theme.primary,
					borderColor: window.theme.primary,
					hoverBackgroundColor: window.theme.primary,
					hoverBorderColor: window.theme.primary,
					data: [parsedData[0]?.jan??0, parsedData[0]?.feb??0, parsedData[0]?.mar??0, parsedData[0]?.apr??0, parsedData[0]?.may??0, parsedData[0]?.jun??0, parsedData[0]?.jul, parsedData[0]?.aug??0, parsedData[0]?.sep??0, parsedData[0]?.oct??0, parsedData[0]?.nov??0, parsedData[0]?.dec??0],
					barPercentage: .75,
					categoryPercentage: .5
				}]
			},
			options: {
				maintainAspectRatio: false,
				legend: {
					display: false
				},
				scales: {
					yAxes: [{
						gridLines: {
							display: false
						},
						stacked: false,
						ticks: {
							stepSize: 20
						}
					}],
					xAxes: [{
						stacked: false,
						gridLines: {
							color: "transparent"
						}
					}]
				}
			}
		});
	});
</script>


<script>
	document.addEventListener("DOMContentLoaded", function () {
		const data = `<%- JSON.stringify(totalAmountByMonth) %>`;
		const parsedData = JSON.parse(data);
	
		var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
		var gradientLight = ctx.createLinearGradient(0, 0, 0, 225);
		gradientLight.addColorStop(0, "rgba(215, 227, 244, 1)");
		gradientLight.addColorStop(1, "rgba(215, 227, 244, 0)");
		var gradientDark = ctx.createLinearGradient(0, 0, 0, 225);
		gradientDark.addColorStop(0, "rgba(51, 66, 84, 1)");
		gradientDark.addColorStop(1, "rgba(51, 66, 84, 0)");
		// Line chart
		new Chart(document.getElementById("chartjs-dashboard-line"), {
			type: "line",
			data: {
				labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				datasets: [{
					label: "Sales (₹)",
					fill: true,
					backgroundColor: window.theme.id === "light" ? gradientLight : gradientDark,
					borderColor: window.theme.primary,
					data: [
						parsedData[0]?.jan ??0,
						parsedData[0]?.feb ??0,
						parsedData[0]?.mar ??0,
						parsedData[0]?.apr ??0,
						parsedData[0]?.may ??0,
						parsedData[0]?.jun ??0,
						parsedData[0]?.jul ??0,
						parsedData[0]?.aug ??0,
						parsedData[0]?.sep ??0,
						parsedData[0]?.oct ??0,
						parsedData[0]?.nov ??0,
						parsedData[0]?.dec ??0,

					]
				}]
			},
			options: {
				maintainAspectRatio: false,
				legend: {
					display: false
				},
				tooltips: {
					intersect: false
				},
				hover: {
					intersect: true
				},
				plugins: {
					filler: {
						propagate: false
					}
				},
				scales: {
					xAxes: [{
						reverse: true,
						gridLines: {
							color: "rgba(0,0,0,0.0)"
						}
					}],
					yAxes: [{
						ticks: {
							stepSize: 1000
						},
						display: true,
						borderDash: [3, 3],
						gridLines: {
							color: "rgba(0,0,0,0.0)",
							fontColor: "#fff"
						}
					}]
				}
			}
		});
	});
</script>
<script>
	document.addEventListener("DOMContentLoaded", function () {
		const data = `<%- JSON.stringify(totalAmountByMonth) %>`;
		const parsedData = JSON.parse(data);

		var ctx = document.getElementById("chartjs-dashboard-line").getContext("2d");
		var gradientLight = ctx.createLinearGradient(0, 0, 0, 225);
		gradientLight.addColorStop(0, "rgba(215, 227, 244, 1)");
		gradientLight.addColorStop(1, "rgba(215, 227, 244, 0)");
		var gradientDark = ctx.createLinearGradient(0, 0, 0, 225);
		gradientDark.addColorStop(0, "rgba(51, 66, 84, 1)");
		gradientDark.addColorStop(1, "rgba(51, 66, 84, 0)");
		// Line chart
		new Chart(document.getElementById("chartjs-dashboard-line-income"), {
			type: "line",
			data: {
				labels: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
				datasets: [{
					label: "Sales (₹)",
					fill: true,
					backgroundColor: window.theme.id === "light" ? gradientLight : gradientDark,
					borderColor: window.theme.primary,
					data: [
						parsedData[0]?.jan ??0,
						parsedData[0]?.feb ??0,
						parsedData[0]?.mar ??0,
						parsedData[0]?.apr ??0,
						parsedData[0]?.may ??0,
						parsedData[0]?.jun ??0,
						parsedData[0]?.jul ??0,
						parsedData[0]?.aug ??0,
						parsedData[0]?.sep ??0,
						parsedData[0]?.oct ??0,
						parsedData[0]?.nov ??0,
						parsedData[0]?.dec ??0,

					]
				}]
			},
			options: {
				maintainAspectRatio: false,
				legend: {
					display: false
				},
				tooltips: {
					intersect: false
				},
				hover: {
					intersect: true
				},
				plugins: {
					filler: {
						propagate: false
					}
				},
				scales: {
					xAxes: [{
						reverse: true,
						gridLines: {
							color: "rgba(0,0,0,0.0)"
						}
					}],
					yAxes: [{
						ticks: {
							stepSize: 1000
						},
						display: true,
						borderDash: [3, 3],
						gridLines: {
							color: "rgba(0,0,0,0.0)",
							fontColor: "#fff"
						}
					}]
				}
			}
		});
	});
</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		// Pie chart
		new Chart(document.getElementById("chartjs-dashboard-pie"), {
			type: "pie",
			data: {
				labels: ["Men", "Women", "Sports", "Other"],
				datasets: [{
					data: [4306, 3801, 1689, 3251],
					backgroundColor: [
						window.theme.primary,
						window.theme.warning,
						window.theme.danger,
						window.theme.black,
						"#E8EAED"
					],
					borderWidth: 5,
					borderColor: window.theme.white
				}]
			},
			options: {
				responsive: !window.MSInputMethodContext,
				maintainAspectRatio: false,
				legend: {
					display: false
				},
				cutoutPercentage: 70
			}
		});
	});
</script>