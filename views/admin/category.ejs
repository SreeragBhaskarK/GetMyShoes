<main class="content">
  <div class="container-fluid p-0">
    <!-- Button trigger modal -->


    <a href="/admin/category" data-bs-toggle="modal" data-bs-target="#exampleModal"
      class="btn btn-primary float-end mt-n1"><i class="fas fa-plus"></i> New Category</a>
    <div class="mb-3">
      <h1 class="h3 d-inline align-middle">Category</h1>
    </div>

    <table id="example" class="table table-striped" style="width:100%">
      <thead>
        <tr>

          <th>Sl. No </th>
          <th>Category </th>
          <th>Category Type </th>
          <th>Options </th>

        </tr>
      </thead>



      <tbody>

        <% (categorys || []).forEach((i,index)=> { %>

          <tr>
            <td>
              <%= (index + 1).toString().padStart(2, '0' ) %>
            </td>

            <td>
              <%= i.category %>
            </td>
            <td>
              <%= i.category_type %>
            </td>

            <% if (i.category_type!='parent' ) { %>
              <td style="display: flex;">

                <button onclick="categoryEdit('<%= i._id%>')" type="button" class="btn btn-primary me-2">Edit</button>

                <button type="button" class="btn btn-danger" data-bs-toggle="modal"
                  data-bs-target="#staticBackdrop<%= i._id%>">Delete</button>
              </td>
              <% }else{ %>
                <td>
                </td>
                <% } %>
          </tr>
          <!-- Modal -->
          <div class="modal fade" id="staticBackdrop<%= i._id%>" data-bs-backdrop="static" data-bs-keyboard="false"
            tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
            <div class=" modal-dialog modal-sm modal-dialog-centered">
              <div class="modal-content ">

                <div class="modal-body">
                  Are you want to delete <%= i.category %> ?
                </div>
                <div class="modal-footer">
                  <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
                  <a href="/admin/delete-category/<%= i._id%>"><button type="button"
                      class="btn btn-danger">Delete</button></a>
                </div>
              </div>
            </div>
          </div>
          <% }) %>


      </tbody>

    </table>

  </div>
</main>



<!-- Modal -->
<div class="modal fade" id="exampleModalEdit" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <form action="/admin/category_update" class="needs-validation-edit" novalidate="" method="post">
        <input type="text" hidden value="" id="category_id" name="category_id" id="">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Category Edit</h5>
          <a href="/admin/category"><button type="button" class="btn-close" data-bs-dismiss="modal"
              aria-label="Close"></button></a>
        </div>
        <div class="modal-body">


          <label for="">Category Name</label><br>
          <input type="text" placeholder="category " class="form-control " id="categoryName" value=""
            name="category" required="">
          <input hidden type="text" id="categoryNameCheck">
          <div id="categoryVaildEdit" class="valid-feedback">
            Looks good!
          </div>
          <div id="invalidCategoryEdit" class="invalid-feedback">
            Enter Category Name!
          </div>
          <label for="" class="form-check-label">Category Type</label><br>
          <label for="">Parent</label>
          <input name="category_type" class="form-check-input" id="parent" value="parent" type="radio" required><br>
          <label for="">Sub</label>
          <input name="category_type" class="form-check-input" id="sub" value="sub" type="radio" required><br>
          <label for="">Brand</label>
          <input name="category_type" class="form-check-input" id="brand" value="brand" type="radio" required><br>

        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Save</button>
        </div>
      </form>
    </div>
  </div>
</div>


<form action="/admin/category" class="needs-validation" novalidate="" method="post">

  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Category Add</h5>
          <a href="/admin/category"><button type="button" class="btn-close" data-bs-dismiss="modal"
              aria-label="Close"></button></a>
        </div>
        <div class="modal-body">
          <label for="">Category Name</label><br>
          <input type="text" placeholder="category" id="categoryAdded" class="form-control is-invalid " name="category"
            required="">
          <div id="categoryVaild" class="valid-feedback">
            Looks good!
          </div>
          <div id="invalidCategory" class="invalid-feedback">
            Enter Category Name!
          </div>
          <label for="invalidCheck" class="form-check-label">Category Type</label><br>
          <label for="">Parent</label>
          <input name="category_type" class="form-check-input" value="parent" type="radio" required><br>
          <label for="">Sub</label>
          <input name="category_type" class="form-check-input" value="sub" type="radio" required><br>
          <label for="">Brand</label>
          <input name="category_type" class="form-check-input" value="brand" type="radio" required><br>





        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-primary">Submit</button>
        </div>
      </div>
    </div>
  </div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  const categoryName = $('#categoryAdded');
  console.log(categoryName.val());
  let timeout = null;
  categoryName.on('input', () => {
    clearTimeout(timeout);
    timeout = setTimeout(() => {
      const categoryValue = categoryName.val();
      console.log(categoryValue, 'dd');
      if (categoryValue.trim() === "") {
        categoryName.removeClass('is-valid').addClass('is-invalid');
        $('#invalidCategory').html("Enter Category Name!")
      } else {
        fetch('/admin/category_name_check', {
          method: 'post',
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ category: categoryValue })
        }).then(response => {
          return response.json()
        }).then(data => {
          console.log(data);
          if (data.status) {
            $('#categoryVaild').attr('hidden', false)
            categoryName.removeClass('is-invalid').addClass('is-valid');
          } else {
            $('#categoryVaild').attr('hidden', true)

            categoryName.removeClass('is-valid').addClass('is-invalid');
            $('#invalidCategory').html(data.message)


          }
        })

      }
    }, 500);
  });
</script>
<script>
  const categoryNameEdit = $('#categoryName');
  console.log(categoryNameEdit.val());
  let timeoutedit = null;
  categoryNameEdit.on('input', () => {
    clearTimeout(timeoutedit);
    timeoutedit = setTimeout(() => {
      const categoryValue = categoryNameEdit.val();
      const checkName = $('#categoryNameCheck').val()
      if (checkName != categoryValue) {
        if (categoryValue.trim() === "") {
          $('#categoryVaildEdit').attr('hidden', true)
          categoryNameEdit.removeClass('is-valid').addClass('is-invalid');
          $('#invalidCategoryEdit').html("Enter Category Name!")
        } else {


          fetch('/admin/category_name_check', {
            method: 'post',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ category: categoryValue })
          }).then(response => {
            return response.json()
          }).then(data => {
            console.log(data);
            if (data.status) {
              $('#categoryVaildEdit').attr('hidden', false)
              categoryNameEdit.removeClass('is-invalid').addClass('is-valid');
            } else {
              $('#categoryVaildEdit').attr('hidden', true)

              categoryNameEdit.removeClass('is-valid').addClass('is-invalid');
              $('#invalidCategoryEdit').html(data.message)


            }
          })
        }
      }else{
        $('#categoryVaildEdit').attr('hidden', false)
              categoryNameEdit.removeClass('is-invalid').addClass('is-valid');
      }

    }, 500);
  });
</script>



<script>
  function categoryEdit(categoryId) {

    $.ajax({
      type: 'get',
      url: '/admin/edit-category/' + categoryId,
      success: (response) => {
        console.log(response);
        document.getElementById('categoryName').value = response.category
        document.getElementById('categoryNameCheck').value = response.category
        if (response.category_type == 'parent') {
          document.getElementById("parent").setAttribute("checked", "checked");
        } else if (response.category_type == 'brand') {
          document.getElementById("brand").setAttribute("checked", "checked");
        } else {
          document.getElementById("sub").setAttribute("checked", "checked");
        }
        document.getElementById('category_id').value = response._id

        $('#exampleModalEdit').modal('show');
      }
    })

  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation')
    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          const categoryName = $('#categoryAdded');

          form.classList.add('was-validated')
          if (!form.checkValidity() || categoryName.hasClass('is-invalid')) {
            event.preventDefault()
            event.stopPropagation()
            form.classList.remove('was-validated')
          }
        }, false)
      })
  });
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.querySelectorAll('.needs-validation-edit')
    // Loop over them and prevent submission
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          const categoryNameEdt = $('#categoryName');

          form.classList.add('was-validated')
          if (!form.checkValidity() || categoryNameEdt.hasClass('is-invalid')) {
            event.preventDefault()
            event.stopPropagation()
            form.classList.remove('was-validated')
          }
        }, false)
      })
  });
</script>